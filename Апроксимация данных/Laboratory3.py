def cel_func(x, y):
    return (x**2) - (x*y) +3*(y**2) - x


n = 2
x0 = [0, 0]
h = 0.2
d = 2
m = 0.5
e = 0.1
flag = True
x1 = x0[:]
x2 = x0[:]
xp = []
i = 1
global_counter = 0
print("Итерация 0")
for j in range(10):
    print("Проверим исследующий поиск вокруг базисной точки", x0)
    print("Значение функции в этой точке =", cel_func(x0[0], x0[1]))
    print("Проведем исследующий поиск в доль оси", i)
    print("Делаем шаг в положительном направлении")
    x2[i-1]+=h
    print("Полученная точка имеет слудующие координаты", x2)
    print("Значение функции в полученной точке =", cel_func(x2[0], x2[1]))
    if cel_func(x2[0], x2[1]) < cel_func(x1[0], x1[1]):
        print("Шаг в положительном направлении оси {} является удачным".format(i))
        x1 = x2[:]
        if i<n:
            i+=1
            print("Точка -бумммм")
            continue
    elif cel_func(x2[0], x2[1]) > cel_func(x1[0], x1[1]):
        print("Шаг в положительном направлении оси {} является неудачным".format(i))
        print("Делаем шаг в начальную точку, а затем делаем шаг в отрицательном направлении")
        x2[i-1]-=2*h
        print("Полученная точка имеет слудующие координаты", x2)
        print("Значение функции в полученной точке =", cel_func(x2[0], x2[1]))
        if cel_func(x2[0], x2[1]) < cel_func(x1[0], x1[1]):
            print("Шаг в отрицательном направлении оси {} является удачным".format(i))
            x1 = x2[:]
            if i < n:
                i += 1
                continue
        elif cel_func(x2[0], x2[1]) > cel_func(x1[0], x1[1]):
            print("Шаг в отрицательном направлении оси {} является неудачным".format(i))
            print("Точка является неудачной", x2)
            print("Значение функции в этой точке", cel_func(x2[0], x2[1]))
            x2[i-1]+=h
            x1 = x2[:]
            print("Возвращаемся в исходную точку", x2)
            if i < n:
                i += 1
                continue
    x2 = [round(v, 5) for v in x2]
    if x0 == x2:
        print("Исследующий поиск был неудачным!")
        h=h/d
        i = 1
        print("Шаг теперь =", h)
        global_counter+=1
        print("_____________________________________________________________________")
        print("Итерация", global_counter)
        continue
    elif x0 != x2:
        print("Исследующий поиск был успешен, проводим поиск по образцу")
        xp = [x2[0] + m*(x2[0] - x0[0]), x2[1] + m*(x2[1] - x0[1])]
        print("В ходе поиска по образцу была получена точка", xp)
        print("Значение функции в найденной точке", cel_func(xp[0], xp[1]))
    if cel_func(xp[0], xp[1]) < cel_func(x2[0], x2[1]):
        print("Шаг по образцу считается удачным")
        x0 = xp[:]
        print("Новая базисная точка =", x0)
    elif cel_func(xp[0], xp[1]) > cel_func(x2[0], x2[1]):
        print("Шаг по образцу считается неудачным")
        x0 = x2[:]
        print("Новая базисная точка =", x0)
    if h<=e:
        print("Поиск завершен!")
        print("Точка минимума", x2)
        print("Значение функции в минимальной точке =", cel_func(x2[0], x2[1]))
        break
    elif h>e:
        print("Проводится исследующий круг вокруг новой базисной точки", x0)
        x1 = x0[:]
        x2 = x0[:]
        i = 1
        global_counter+=1
        print("_____________________________________________________________________")
        print("Итерация", global_counter)
